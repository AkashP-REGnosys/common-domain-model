namespace cdm.base.staticdata.asset.common
version "${project.version}"

import cdm.base.*
import cdm.base.staticdata.party.*
import cdm.synonyms.config.*

type AssetPool: <"Characterizes the asset pool behind an asset backed bond.">

	version string (0..1) <"The asset pool version.">
	effectiveDate date (0..1) <"Optionally it is possible to specify a version effective date when a version is supplied.">
	initialFactor number (1..1) <"The part of the mortgage that is outstanding on trade inception, i.e. has not been repaid yet as principal. It is expressed as a multiplier factor to the mortgage: 1 means that the whole mortgage amount is outstanding, 0.8 means that 20% has been repaid.">
	currentFactor number (0..1) <"The part of the mortgage that is currently outstanding. It is expressed similarly to the initial factor, as factor multiplier to the mortgage. This term is formally defined as part of the 'ISDA Standard Terms Supplement for use with credit derivatives transactions on mortgage-backed security with pas-as-you-go or physical settlement'.">
	condition EffectiveDate: <"FpML specifies that it is possible to specify a version effective date when a versionId is supplied.">
		if version is absent
		then effectiveDate is absent

type Bond extends IdentifiedProduct: <"A class to specify a bond as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type BondType: <"Specification of the type of bond">

	bondClass BondClassEnum (0..1) <"Specification of the characteristics of bond">
	bondEconomics BondEconomics (0..*) <"Specification of the financial terms of the bond">


/*
 * Placeholder, that will need to be populated
 */
type Commodity: <"A class to specify a commodity asset.">

type ConvertibleBond extends IdentifiedProduct: <"A class to specify a convertible bond as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type Equity extends IdentifiedProduct: <"A class to specify an equity as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type ExchangeTradedFund extends IdentifiedProduct: <"A class to specify an ETF as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type IdentifiedProduct: <"An abstract class to specify a product which terms are abstracted through reference data.">

	productIdentifier ProductIdentifier (1..1)

type Index extends IdentifiedProduct: <"A class to specify an index as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type Loan extends IdentifiedProduct:

	borrower LegalEntity (0..*) <"Specifies the borrower. There can be more than one borrower. It is meant to be used in the event that there is no Bloomberg Id or the Secured List isn't applicable.">
	lien string (0..1) <"Specifies the seniority level of the lien.">
		[metadata scheme]
	facilityType string (0..1) <"The type of loan facility (letter of credit, revolving, ...).">
		[metadata scheme]
	creditAgreementDate date (0..1) <"The credit agreement date is the closing date (the date where the agreement has been signed) for the loans in the credit agreement. Funding of the facilities occurs on (or sometimes a little after) the Credit Agreement date. This underlier attribute is used to help identify which of the company's outstanding loans are being referenced by knowing to which credit agreement it belongs. ISDA Standards Terms Supplement term: Date of Original Credit Agreement.">
	tranche string (0..1) <"The loan tranche that is subject to the derivative transaction. It will typically be referenced as the Bloomberg tranche number. ISDA Standards Terms Supplement term: Bloomberg Tranche Number.">
		[metadata scheme]

type MortgageBackedSecurity extends ProductIdentifier:

	pool AssetPool (0..1) <"The mortgage pool that is underneath the mortgage obligation.">
	sector MortgageSectorEnum (0..1) <"The sector classification of the mortgage obligation.">
		[metadata scheme]
	tranche string (0..1) <"The mortgage obligation tranche that is subject to the derivative transaction.">

type MutualFund extends IdentifiedProduct: <"A class to specify a mutual fund as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type ProductIdentifier: <"The product identifier, composed of an identifier, a source and a product taxonomy. The source is optional because it can be specified through the scheme that is associated with the identifier. As FpML doesn't specify a scheme as part of the standard, that scheme cannot be mapped to the CDM ProductIdSourceEnum. The associated globalKey denotes the ability to associate a hash value to the ProductIdentifier instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.">
	[metadata key]

	identifier string (1..*) <" A unique identifier of an asset provided by a public source that is specified in the source attribute.">
		[metadata scheme]
		[synonym Workflow_Event value "instrumentId" maps 2 meta "instrumentIdScheme"]
		[synonym Workflow_Event value "instrumentId" meta "instrumentIdScheme"]
	source ProductIdSourceEnum (0..1) <"The identifier source.">

// productTaxonomy ProductTaxonomy (0..*) <"The product taxonomy value(s) associated with a product.">
type ProductTaxonomy: <"The product taxonomy, which is composed of a taxonomy value and a taxonomy source.">

	taxonomyValue string (1..1) <"The taxonomy value.">
	taxonomySource TaxonomySourceEnum (1..1) <"The taxonomy source.">

type Security:

	bond Bond (0..1)
		[synonym Workflow_Event value "bond"]
	convertibleBond ConvertibleBond (0..1)
		[synonym Workflow_Event value "convertibleBond"]
	equity Equity (0..1)
	exchangeTradedFund ExchangeTradedFund (0..1)
	mortgageBackedSecurity MortgageBackedSecurity (0..1)
	mutualFund MutualFund (0..1)
	warrant Warrant (0..1)
	condition: one-of

type Warrant extends IdentifiedProduct: <"A class to specify a warrant as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">

type CollateralIssuerType: <"A class to allow specification of the type of entity issuing the collateral.">

	issuerType IssuerTypeEnum (1..1) <"Origin of entity issuing the collateral.">
	supraNationalType SupraNationalIssuerTypeEnum (0..1) <"Debt issued by international organisations and multilateral banks.">
	quasiGovernmentType QuasiGovernmentIssuerType (0..1) <"Debt issues by institutions or bodies, typically constituted by statute, with a function mandated by the government and subject to government supervision inclusive of profit- and non-profit making bodies. Includes the US Agencies and GSEs and the EU concept of public sector entities. Excluding any entities which are also Regional Government">
	regionalGovernmentType RegionalGovernmentIssuerType (0..1) <"Regional government, local authority or municipal.">
	specialPurposeVehicleType SpecialPurposeVehicleIssuerType (0..1)

	condition SupraNationalSubType:
		if issuerType <> IssuerTypeEnum -> SupraNational
		then supraNationalType is absent

	condition QuasiGovernmentSubType:
		if issuerType <> IssuerTypeEnum -> QuasiGovernment
		then quasiGovernmentType is absent

	condition RegionalGovernmentSubType:
		if issuerType <> IssuerTypeEnum -> RegionalGovernment
		then regionalGovernmentType is absent

	condition SpecialPurposeVehicleSubType:
		if issuerType <> IssuerTypeEnum -> SpecialPurposeVehicle
		then specialPurposeVehicleType is absent


type QuasiGovernmentIssuerType: <"A class to allow specification of different types of Quasi Government collateral.">

	sovereignEntity boolean (1..1) <"True if sovereign entity (e.g. not separate legal personality from sovereign) or false if non-sovereign entity (e.g. separate legal personality from sovereign).">
	sovereignRecourse boolean (0..1) <"Applies to non-sovereign entity (e.g. separate legal personality from sovereign).  True if entity has recourse to sovereign (e.g. debt guaranteed by government).  False if entity does not have recourse to sovereign.">
	// TODO: other (non-exhaustive) criteria e.g. GSEs with/without government support, EMIR public sector entities, US agencies
	condition NonSovereignEntityRecourse:
		if sovereignRecourse exists then sovereignEntity = False


type RegionalGovernmentIssuerType: <"A class to allow specification of different type of Regional government collateral.">

	sovereignRecourse boolean (1..1) <"Applies to regional governments, local authorities or municipals.  True if entity has recourse to sovereign (e.g. debt guaranteed by government).  False if entity does not have recourse to sovereign.">
	// TODO: other (non-exhaustive) criteria e.g. US municipals, Canadian provinces, German Lander

type SpecialPurposeVehicleIssuerType: <"A class to allow specification of different types of special purpose vehicle (SPV) collateral.">
	creditRisk CreditRiskEnum (0..1) <"Tranched or untranched credit risk."> // Not required?  If tranched credit risk then specified ProductCriteria.agencyRating.
	// TODO: other (non-exhaustive) criteria e.g. by asset class (RMBS, CMBS, CLO, by regional risk focus, by guarantor (e.g. Ginnie Mae)). Can the existing FpML framework be leveraged.  See type MortgageBackedSecurity

type BondEconomics: <"Specification of the economics of the bond">

	bondSeniority BondSeniorityEnum (0..1) <"Security: Bond Economics: The order of repayment in the event of a sale or bankruptcy of the issuer or a related party (eg guarantor).">
	bondInterest BondInterestEnum (0..1) <"Security: Bond Economics: The terms of the reference rate for calculation of interest on the bond.">
	bondPrincipal BondPrincipalEnum (0..1) <"Security: Bond Economics: The repayment terms for the principal on the bond.">

	