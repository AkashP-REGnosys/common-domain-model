namespace org.isda.cdm
version "${project.version}"

import cdm.base.staticdata.party.*
import cdm.product.common.settlement.*

import cdm.documentation.*
import cdm.synonyms.config.*

type Collateral: <"A type for defining the obligations of the counterparty subject to credit support requirements.">

	independentAmount IndependentAmount (1..1) <"Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. ('with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero').">

type CreditSupportAgreement: <"The agreement executed between the parties and intended to govern collateral arrangement for all OTC derivatives transactions between those parties.">

	creditSupportAgreementType CreditSupportAgreementTypeEnum (1..1) <"The type of ISDA Credit Support Agreement.">
		[metadata scheme]
	date date (1..1) <"The date of the agreement executed between the parties and intended to govern collateral arrangements for all OTC derivatives transactions between those parties.">
	identifierValue string (0..1) <"An identifier used to uniquely identify the CSA. FpML specifies the type as creditSupportAgreementIdScheme, but without proposing any value.  As far as e understand, no scheme has yet been developed at this point.">

type RelatedAgreement: <"A class for specifying the legal agreements that govern the contract, either as a reference to such agreements when specified as part of the CDM, or through identification of some of the key terms of those documents, such as the type of document, the document identifier, the publisher, the document vintage and the agreement date.">

	legalAgreement LegalAgreement (0..1) <"The legal agreement(s) that govern the contract, when such agreement is specified as a reference part of the CDM.">
		// [metadata reference] // TODO fix bug related to setting null references in func assign-output
		[synonym Workflow_Event value "legalAgreement"]
	// TODO remove when migrating from documentationIdentification to legalAgreement (and update cardinality to 1..1)
	documentationIdentification DocumentationIdentification (0..1) <"The identification of the legal document(s) that govern the contract through some of the key terms of such document(s): type of document, the document identifier, the publisher, the document vintage and the agreement date.">
		[synonym ISDA_Create_1_0 value "ignore"]

type IndependentAmount extends PayerReceiver: <"A class specifying the Independent Amount as the combination of a payer/receiver, a payment amount, a payment date and an associated payment calculation rule.">

	paymentDetail PaymentDetail (1..*) <"An attribute that specifies a payment as the combination of a payment amount, a payment date and an associated payment calculation rule.">

type MasterAgreement: <"A class for defining the agreement executed between the parties and intended to govern all OTC derivatives transactions between those parties.">

	masterAgreementId string (0..1) <"An identifier that has been created to identify the master agreement.">
		[metadata scheme]
	masterAgreementType MasterAgreementTypeEnum (1..1) <"The agreement executed between the parties and intended to govern product-specific derivatives transactions between those parties.">
		[metadata scheme]
	masterAgreementVersion string (0..1) <"The version of the master agreement.">
		[metadata scheme]
	masterAgreementDate date (0..1) <"The date on which the master agreement was signed.">
		[synonym ISDA_Create_1_0 value "master_agreement_date" path "date_of_isda_master_agreement" maps 2] // TODO: remove "maps 2" once migration complete

type MasterConfirmation: <"A class for defining the master confirmation agreement executed between the parties.">

	masterConfirmationType MasterConfirmationTypeEnum (1..1) <"The type of master confirmation executed between the parties.">
		[metadata scheme]
	masterConfirmationDate date (1..1) <"The date of the confirmation executed between the parties and intended to govern all relevant transactions between those parties.">
	masterConfirmationAnnexDate date (0..1) <"The date that an annex to the master confirmation was executed between the parties.">
	masterConfirmationAnnexType MasterConfirmationAnnexTypeEnum (0..1) <"The type of master confirmation annex executed between the parties.">
		[metadata scheme]

type TradeDate: <"A class to specify the contract's trade date alongside an identifier.">
	[metadata key]

	date date (1..1) <"The trade date associated with the contract. In the case of a novated trade, this date corresponds to the novation date.">
