Rosetta versionNumber "0.0.1"
FIX versionNumber "5.0 SP3"
FpML versionNumber "5.10"


/*
 * Need to confirm with FpML experts that the correlationId is meant to be used as a unique identified for an event, that doesn't change across corrections and cancellations
 */
//class Correlation <"Class corresponding to the FpML CorrelationAndOptionalSequence.model.">
//{
//	parentCorrelationId string (0..1) scheme "correlationIdScheme" <"An optional identifier used to correlate between related processes.">;
//		[synonym FpML value parentCorrelationId]
//	correlationId string (1..1) scheme "correlationIdScheme" <"A qualified identifier used to correlate between messages. The FpML documentation specifies that the initiator of a business process should allocate a unique correlation identifier for each process instance it begins and any subsequent message related to the same process should contain the same identifier. The qualified scheme based value ensures that participants cannot accidentally re-use an identifier previous generated by another firm.">;
//		[synonym FpML value correlationId]
//		[synonym ISO_20022 value TxId]
//		[synonym FIX value QuoteReqID tag 131 set correlationId when RequestForQuote exists]
//		[synonym FIX value QuoteID tag 117 set correlationId when Quote exists]
//		[synonym FIX value OrderID tag 37 set correlationId when Order exists]
//	sequenceNumber int (0..1) <"A numeric value that can be used to order messages with the same correlation identifier from the same sender.">;
//		[synonym FpML value sequenceNumber]
//}

//data rule Correlation_sequenceNumber <"FpML specifies sequenceNumber as a positive integer.">
//	when Correlation -> sequenceNumber exists
//	then Correlation -> sequenceNumber >= 0

class Price stereotype preExecution, execution, postExecution <"The price, as specified through a value and a type qualification.">
	[synonym FpML value ActualPrice]
	[synonym ISO_20022 value SecuritiesTransactionPrice2Choice]
{
	price number (1..1) <"The price per unit of quantity, (e.g. per share).">;
		[synonym FIX value Price tag 44 set price when Order exists]
		[synonym FIX value LastPx tag 31 set price when ExecutionEvent exists]
		[synonym FpML value amount]
		[synonym ISO_20022 value Amt projection Price_ListedProduct]
		[synonym ISO_20022 value Pctg projection Price_ListedProduct]
		[synonym ISO_20022 value Yld projection Price_ListedProduct]
		[synonym ISO_20022 value BsisPts projection Price_ListedProduct]
		[regulatoryReference ESMA_MiFIR regulation "RTS 22" annex "I table 2 #33" provision "Traded price of the transaction excluding, where applicable, commission and accrued interest. (...)"]
	currency CurrencyEnum (0..1) <"The currency associated with the price. This attribute is not present if the price is expressed in terms such as percentage, as specified through the priceType element.">;
		[synonym FIX value Currency tag 15]
		[synonym FpML value currency]
		[synonym ISO_20022 value Ccy]
		[regulatoryReference ESMA_MiFIR regulation "RTS 22" annex "I table 2 #34" provision "Currency in which the price is expressed (applicable if the price is expressed as monetary value)."]
	priceType PriceTypeEnum (1..1) <"The price type (e.g. yield), qualified through an enumeration.">;
		[synonym FIX value PriceType tag 423]
		[synonym FpML value PriceExpression]
}

data rule Price_no_currency <"The currency should be absent when the priceType attribute has certain values, such as yield.">
	when Price -> priceType = PriceTypeEnum.Percentage 
		or Price -> priceType = PriceTypeEnum.Yield
		or Price -> priceType = PriceTypeEnum.Spread
		or Price -> priceType = PriceTypeEnum.Discount
		or Price -> priceType = PriceTypeEnum.TEDYield
	then Price -> currency is absent
	
data rule Price_currency <"The currency should be present when the priceType attribute has certain values, such as fixed amount.">
	when Price -> priceType = PriceTypeEnum.FixedAmount
		or Price -> priceType = PriceTypeEnum.Premium
	then Price -> currency exists

/*
 * Open issue: the FIX enumeration has a number of values (e.g. discount, per unit, 32nds quote units...) which cannot map properly into the ISO 20022 synonym. 
 * Actual practice needs to be confirmed, and the enumeration entries not corresponding to market practice be deprecated from the canonical model.
 */
projection rule Price_ListedProduct <"ISO 20022 collapses the price amount and price type through one field, which is distinct depending up the price type.">
	for target ISO_20022
	when ListedProduct exists {
		when Price -> priceType = PriceTypeEnum.Percentage
			map Price -> price to synonym Pctg
		when Price -> priceType = PriceTypeEnum.Yield or Price -> priceType = PriceTypeEnum.TEDYield
			map Price -> price to synonym Yld
		when Price -> priceType = PriceTypeEnum.Premium or Price -> priceType = PriceTypeEnum.FixedAmount
			map Price -> price to synonym Amt
		when Price -> priceType = PriceTypeEnum.Spread
			map Price -> price to synonym BsisPts
		}
	
projection rule Price_Derivatives <"ISDA specified guidelines as to how an OTC derivative price is expressed for the purpose of complying with the CFTC public price reporting provisions.  This has become the reference guideline for the marketplace.">
	[marketPractice ISDA write-up "ISDA PN-APN Approach Document v1.0 2013_03_15" recommendation "ISDA recommendation for the reporting of the price information of OTC derivatives for compliance with the CFTC Part 43 public price reporting rule, which specifies the Price Notation (PN) and Additional Price Notation (APN) fields."]
	for target CFTC_Part43
	when FixFloatSwap exists (
		map SwapFixRate to synonym PN1
		map SwapSpread to synonym PN2
		map SwapFee to synonym [PN3, APN]
		)
	when InflationSwap exists (
		map SwapFixRate to synonym PN1
		map SwapSpread to synonym PN2
		map SwapFee to synonym [PN3, APN]
		)
	when BasisSwap exists (
		map SwapSpread to synonym [PN1, PN2]
		map SwapFee to synonym [PN3, APN]
		)
	when FixFixSwap exists (
		map SwapFixRate to synonym [PN1, PN2]
		map SwapFee to synonym [PN3, APN]
		)
	when ListedInterestRateDerivative exists (
		map ListedInterestRateDerivative -> fixedRate to synonym PN1
		map ListedInterestRateDerivative -> spread to synonym PN2
		map ListedInterestRateDerivative -> fee to synonym PN3
		)

//class Quantity stereotype preExecution, execution, postExecution <"The qualification of the quantity to be associated with a quote, order, execution...">
//	[synonym ISO_20022 value FinancialInstrumentQuantity25Choice]
//{
//	quantityType QuantityTypeEnum (1..1) <"The manner in which the quantity is expressed, specified through enumerated values, e.g. units, contracts, ...">;
//		[synonym FIX value QtyType tag 854]
//	quantity number (0..1) <"The actual quantity, when expressing through an amount and no currency.">;
//		[synonym FIX value OrderQty tag 38 set quantity when Order exists]
//		[synonym FIX value LastQty tag 32 set quantity when Execution exists]
//		[synonym ISO_20022 value Unit projection Quantity_Unit]
//	currencyAmount Money (0..1) <"The currency is applicable when the quantity is expressed as a nominal or monetary amount, typically for contractual products.">;
//		[synonym ISO_20022 value NmnlVal projection Quantity_NominalAmount]
//		[synonym ISO_20022 value MntryVal]
//	contractMultiplier number (0..1) <"FIX definition: Specifies the ratio or multiply factor to convert from 'nominal' units (e.g. contracts) to total units (e.g. shares) (e.g. 1.0, 100, 1000, etc). Applicable For Fixed Income, Convertible Bonds, Derivatives, etc. In general quantities for all classes should be expressed in the basic unit of the instrument, e.g. shares for equities, nominal or par amount for bonds, currency for foreign exchange. When quantity is expressed in contracts, e.g. financing transactions and bond trade reporting, ContractMutliplier should contain the number of units in one contract and can be omitted if the multiplier is the default amount for the instrument, i.e. 1,000 par of bonds, 1,000,000 par for financing transactions.">;
//		[synonym FIX value ContractMultiplier tag 231]
//	unitOfMeasure UnitOfMeasureEnum (0..1) <"The unit of measure, as specified through enumerated values.  FIX defines it as the 'Physical unit of measure for Derivative products.', while in practice it essentially applies to physical products, whether derivatives or not.">;
//		[synonym FIX value UnitofMeasure tag 996]
//	timeUnit TimeUnitEnum (0..1) <"Unit of time associated with the contract.">;
//		[synonym FIX value TimeUnit tag 231]
//}

//choice rule Quantity_choice
//	for Quantity required choice between
//	quantity and currencyAmount
//
//data rule ContractMultiplier <"FIX require a contract multiplier when the quantity is expressed in contracts.">
//	when Quantity -> quantityType = QuantityTypeEnum.Contracts
//	then Quantity -> contractMultiplier must exist
//
//data rule UnitOfMeasure <"FIX require a unit of measure when the quantity is expressed in unit of measure per time unit.">	
//	when Quantity -> quantityType = QuantityTypeEnum.UnitsOfMeasurePerTimeUnit
//	then Quantity -> unitOfMeasure must exist
//
//projection rule Quantity_Unit <"ISO 20022 collapses the quantity and quantity type through one field, which is distinct depending up the quantity type.">
//	[regulatoryReference ESMA_MiFIR specification "ISO 20022 - Part 2" section "20.1.11.2.8.3" provision "Quantity <Qty> - Definition: Number of units of the financial instrument, or the number of derivative contracts in the transaction."]
//	[regulatoryReference ESMA_MiFIR specification "ISO 20022 - Part 2" section "20.1.6.1.1" provision "Unit <Unit> - Definition: Quantity expressed as a number, such as a number of shares."]
//	for target ISO_20022
//	when Quantity -> quantityType = QuantityTypeEnum.Units
//		or Quantity -> quantityType = QuantityTypeEnum.Contracts // To-Do: qualify what we do with the FIX value UnitsOfMeasurePerTimeUnit; while it could map to ISO Unit, we need to handle the time dimension
//	map Quantity -> quantity to synonym Unit

/*
 * Need to discuss & test the below, as this is a case where we project a class to a complexType
 */
//projection rule Quantity_NominalAmount
//	for target ISO_20022
//	when ContractualProduct or ListedInterestRateDerivative exists // Many more to be specified here
//	map Quantity -> currencyAmount to synonym NmnlVal

class QuotePrice stereotype preExecution <"The price information as provided through a quote.">
{
	bidPrice number (0..1) <"The price at which the asset will be bought.">;
		[synonym FIX value BidPx tag 132]
	offerPrice number (0..1) <"The price at which the asset will be sold.">;
		[synonym FIX value OfferPx tag 133]
	midPrice number (0..1) <"The mid price/rate.">;
		[synonym FIX value MidPx tag 631]
	priceType PriceTypeEnum (0..1) <"The price type (e.g. yield), qualified through an enumeration.">;
		[synonym FIX value PriceType tag 423]
}

data rule Quote_Price
	[marketPractice FIX_TradingCommunity write-up "Global Fixed Income Committee - Best Practices for Trading Fixed Income Instruments - Volume 3 – Quote-Driven Workflows p. 126" recommendation "Either BidPx, OfferPx or both must be specified."]
	when QuotePrice exists
	then (QuotePrice -> bidPrice or QuotePrice -> offerPrice) exists
		or (QuotePrice -> bidPrice and QuotePrice -> offerPrice) exists

class QuoteSize stereotype preExecution <"The size information that might be associated with a quote.">
{
	minimumBidSize number (0..1) <"FIX definition: Specifies the minimum bid size. Used for markets that use a minimum and maximum bid size.">;
		[synonym FIX value MinBidSize tag 647]
	bidSize number (0..1) <"FIX definition: Specifies the bid size. If MinBidSize is specified, BidSize is interpreted to contain the maximum bid size.">;
		[synonym FIX value BidSize tag 134]
	minimumOfferSize number (0..1) <"FIX definition: Specifies the minimum offer size. If MinOfferSize is specified, OfferSize is interpreted to contain the maximum offer size.">;
		[synonym FIX value MinOfferSize tag 648]
	offerSize number (0..1) <"FIX definition: Specified the offer size. If MinOfferSize is specified, OfferSize is interpreted to contain the maximum offer size.">;
		[synonym FIX value OfferSize tag 135]
	minimalQuantity number (0..1) <"FIX definition: For use in private/directed quote negotiations.">;
		[synonym FIX value MinQty tag 110]
}

class SettlementTerms stereotype preExecution, execution, postExecution <"This class incorporates the two FIX variables for specifying specific a settlement date when those terms are either not specified as part as part of the product reference data (e.g. FX) or are explicitly requested to be different.">
{
	settlementDate date (0..1) <"FIX definition: Specific date of trade settlement (SettlementDate) in YYYYMMDD format. If present, this field overrides SettlType (63). This field is required if the value of SettlType (63) is 6 (Future) or 8 (Sellers Option). This field must be omitted if the value of SettlType (63) is 7 (When and If Issued) (expressed in local time at place of settlement).">;
		[synonym FIX value SettlDate tag 64]
	settlementType SettlementTypeEnum (0..1) <"FIX definition: Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular) Regular is defined as the default settlement period for the particular security on the exchange of execution. In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and 'when-issued' securities. Supplying a value of '7' clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue. Additionally the following patterns may be uses as well as enum values Dx = FX tenor expression for 'days', e.g. 'D5', where 'x' is any integer > 0 Mx = FX tenor expression for 'months', e.g. 'M3', where 'x' is any integer > 0 Wx = FX tenor expression for 'weeks', e.g. 'W13', where 'x' is any integer > 0 Yx = FX tenor expression for 'years', e.g. 'Y1', where 'x' is any integer > 0 Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.">;
		[synonym FIX value SettlType tag 63]
}

choice rule SettlementTerms_choice <"While FIX specifies that settlementDate and settlementType are jointly possible, the Best Practices for Trading Fixed Income Instruments states that settlmentDate should take precedence in such case. For the sake of simplicity, Rosetta prevents both values to be specified.">
	[marketPractice FIX_TradingCommunity write-up "Global Fixed Income Committee - Best Practices for Trading Fixed Income Instruments - Volume 3 – Quote-Driven Workflows p. 146" recommendation "If present, SettleDate (64) overrides SettlType (63)."]
	for SettlementTerms required choice between
	settlementDate and settlementType
//
//data rule SettlementTerms_settlementDate
//	[marketPractice FIX_TradingCommunity write-up "Global Fixed Income Committee - Best Practices for Trading Fixed Income Instruments - Volume 3 – Quote-Driven Workflows p. 146" recommendation "SettleDate (64) is required if the value of SettlType (63) is 6 (Future) or 8 (Sellers Option)."]
//	when SettlementTerms -> settlementType = SettlementTypeEnum.Future 
//		or SettlementTerms -> settlementType = SettlementTypeEnum.SellersOption
//	then SettlementTerms -> settlementDate exists
//	
//data rule SettlementTerms_no_settlementDate
//	[marketPractice FIX_TradingCommunity write-up "Global Fixed Income Committee - Best Practices for Trading Fixed Income Instruments - Volume 3 – Quote-Driven Workflows p. 146" recommendation "SettleDate (64) must be omitted if the value of SettlType (63) is 7 (When and If Issued)."]
//	when SettlementTerms -> settlementType = SettlementTypeEnum.WhenAndIfIssued 
//	then SettlementTerms -> settlementDate is absent
