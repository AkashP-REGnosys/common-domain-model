namespace "org.isda.cdm"

class AssignedIdentifier <"A class to specify and actual identifier and its associated version.">
{
	identifier string (1..1) scheme;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value tradeId meta tradeIdScheme]
		[synonym FpML_5_10 value tradeId path "versionedTradeId" meta tradeIdScheme]
		[synonym Rosetta_Workbench value identifier]
        [synonym DTCC_11_0, DTCC_9_0 value tradeId path "partyTradeIdentifier" maps 2 meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value USITradeId meta tradeIdScheme]
        [synonym DTCC_11_0, DTCC_9_0 value UTITradeId meta tradeIdScheme]
        [synonym DTCC_11_0, DTCC_9_0 value identifier path "payment" meta paymentIdScheme]
        	[synonym CME_ClearedConfirm_1_17 value tradeId meta tradeIdScheme]
        	[synonym CME_ClearedConfirm_1_17 value usi meta usiScheme]
        	[synonym CME_SubmissionIRS_1_0 value RptID path "TrdCaptRpt"]
     version int (0..1) <"The identifier version, which is specified as an integer and is meant to be incremented each time the transaction terms (whether contract or event) change. This version is made option to support the use case where the identifier is referenced without the version. The constraint that a contract and a lifecycle event need to have an associated version is enforced through data rules.">;
		[synonym FpML_5_10 value version path "versionedTradeId"]
		[synonym FpML_5_10 value version]
}

data rule AssignedIdentifier_version <"FpML specifies the version as a non-negative integer.">
	when AssignedIdentifier -> version exists
	then AssignedIdentifier -> version >= 0

data rule Contract_version <"The identifier version is required for contracts.">
	when Contract exists
	then Contract -> contractIdentifier -> assignedIdentifier -> version exists

data rule Event_version <"The identifier version is required for lifecycle events.">
	when Event exists
	then Event -> eventIdentifier -> assignedIdentifier -> version exists

class CalculationAgentModel <"This class corresponds to the FpML CalculationAgent.model.">
{
	calculationAgent CalculationAgent (0..1) <"The ISDA calculation agent responsible for performing duties as defined in the applicable product definitions.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value calculationAgent path "trade"]
		[synonym Rosetta_Workbench value calculationAgent]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value calculationAgent path "trade.swaption"]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value calculationAgent path "swaption"]
	calculationAgentBusinessCenter BusinessCenterEnum (0..1) <"The city in which the office through which ISDA Calculation Agent is acting for purposes of the transaction is located. The short-form confirm for a trade that is executed under a Sovereign or Asia-Pacific Master Confirmation Agreement (MCA), does not need to specify the Calculation Agent. However, the confirm does need to specify the Calculation Agent city. This is due to the fact that the MCA sets the value for Calculation Agent but does not set the value for Calculation Agent city.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value calculationAgentBusinessCenter path "trade"]
		[synonym Rosetta_Workbench value calculationAgentBusinessCenter]
		[synonym DTCC_11_0, DTCC_9_0 value calculationAgentBusinessCenter path "Body.OTC_Matching.Trade.FpML.trade"]
}

class ContractIdentifier extends Identifier <"A class defining a trade identifier issued by the indicated party. The CDM doesn't extends the base class PartyAndAccountReference because of the choice logic with the issuer element.">
	[synonym FpML_5_10 value TradeIdentifier]
{
	partyReference string (0..1) reference <"Reference to a party.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value partyReference meta href]
	accountReference string (0..1) reference <"Reference to an account.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value accountReference meta href]
}

choice rule ContractIdentifier_choice <"Choice rule to represent an FpML choice construct.">
	for ContractIdentifier required choice between
	issuer and partyReference

data rule TradeIdentifier_account <"FpML specifies a choice between issuer and [partyReference, accountReference].  The account element should be populated only alongside the party element.">
	when ContractIdentifier -> partyReference is absent
	then ContractIdentifier -> accountReference is absent

class Identifier <"A class to specify a generic identifier, applicable to contract and lifecycle events.">
{
	id (0..1);
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 meta id]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 meta id path "versionedTradeId.tradeId"]
	issuer string (1..1) scheme, reference <"The identifier issuer, specified by reference to a party specified as part of the transaction.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value partyReference meta scheme, href]
		[synonym FpML_5_10, CME_SubmissionIRS_1_0 value issuer meta issuerIdScheme, href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "partyTradeIdentifier" maps 2 meta href]
		[synonym DTCC_11_0, DTCC_9_0 value USIIssuer meta issuerIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value UTIIssuer meta issuerIdScheme]
		[synonym CME_ClearedConfirm_1_17 value partyReference meta href]
		[synonym CME_ClearedConfirm_1_17 value issuer meta issuerIdScheme]
    assignedIdentifier AssignedIdentifier (1..*) <"This level of indirection between the issuer and the identifier and its version provides the ability to associate multiple identifiers to one issuer, consistently with the FpML PartyTradeIdentifier.">;
}

class PackageInformation <"A class defining additional information that may be recorded alongside a transaction package.">
	[synonym FpML_5_10 value PackageInformation]
{
	relatedParty RelatedParty (0..*) <"This may be used to identify one or more parties that perform a role as part of the transaction.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value relatedParty]
	category CategoryEnum (0..*);
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value category]
	/*
	 * Why should the below be specifically associated with package transactions?
	 * It seems to also be relevant in the context of single trades
	 */
	intentToAllocate boolean (0..1) <"specifies whether the transaction package is anticipated to be allocated.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value intentToAllocate]
/*
 * Only some of the attributes have been incorporated at this point, as some seem questionable (e.g. executionDateTime, which should be associated to the relevant execution event).
 */
}

class PartyContractInformation <"A class defining party-specific additional information that may be recorded with respect to a contract.">
	[synonym FpML_5_10 value PartyTradeInformation]
{
	partyReference string (1..1) reference <"The reference to the party that owns this party contract information or, in the case of shared trades information, the reference that originated such information.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value partyReference meta href]
	naturalPersonRole NaturalPersonRole (0..*) <"The role(s) that natural person(s) may have in relation to the contract.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value relatedPerson]
	relatedParty RelatedParty (0..1);
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value relatedParty]
	accountReference string (0..1) reference <"Reference to an account.">;
		[synonym CME_ClearedConfirm_1_17 value accountReference meta href]
	category CategoryEnum (0..1) scheme <"The qualification of the trade by the counterparty, e.g. customer or principal. This information is relevant for a number of marketplace processes, such as regulatory reporting or clearing.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, CME_ClearedConfirm_1_17 value category meta categoryScheme]
}

class PercentageRule <"A class defining a content model for a calculation rule defined as percentage of the notional amount.">
	[synonym FpML_5_10 value PercentageRule]
{
	paymentPercent number (1..1) <"A percentage of the notional amount.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value paymentPercent]
	notionalAmountReference string (1..1) reference <"A reference to the notional amount.">;
		[synonym FpML_5_10, CME_SubmissionIRS_1_0, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value notionalAmountReference meta href]
}
