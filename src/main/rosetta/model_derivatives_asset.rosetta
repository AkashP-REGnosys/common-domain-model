namespace "org.isda.cdm"

class AssetPool <"Characterises the asset pool behind an asset backed bond.">
	[synonym FpML_5_10 value AssetPool]
{
	version string (0..1) <"The asset pool version.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value version]
	effectiveDate date (0..1) <"Optionally it is possible to specify a version effective date when a version is supplied.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value effectiveDate]
	initialFactor number (1..1) <"The part of the mortgage that is outstanding on trade inception, i.e. has not been repaid yet as principal. It is expressed as a multiplier factor to the mortgage: 1 means that the whole mortgage amount is outstanding, 0.8 means that 20% has been repaid.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value initialFactor]
	currentFactor number (0..1) <"The part of the mortgage that is currently outstanding. It is expressed similarly to the initial factor, as factor multiplier to the mortgage. This term is formally defined as part of the 'ISDA Standard Terms Supplement for use with credit derivatives transactions on mortgage-backed security with pas-as-you-go or physical settlement'.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value currentFactor]
}

data rule AssetPool_effectiveDate <"The effectiveDate associated to the version should only exist if that latter exists.">
 	when AssetPool -> version is absent
 	then AssetPool -> effectiveDate is absent

class Bond extends IdentifiedProduct <"A class to specify a bond as having a product identifier. As a difference with FpML, the CDM specifies the bond only with this product identifier attribute. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">
{

}

class Commodity <"A class to specify a commodity asset.">
	[synonym FpML_5_10 value Commodity]
{
	/*
	 * Placeholder, that will need to be populated
	 */
}

class CommoditySet
{
	commodity Commodity (1..1);
	quantity number (1..1);
	unit UnitEnum (1..1) <"The unit of measure, applicable to physical assets.">;
		[synonym Rosetta_Workbench value unit]
	timeUnit TimeUnitEnum (0..1);
}

class ConstituentWeight <"A class describing the weight of each of the underlyer constituent within the basket, either in absolute or relative terms.">
	[synonym FpML_5_10 value ConstituentWeight]
{
	openUnits number (0..1) <"The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value openUnits]
	basketPercentage number (0..1) <"The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value basketPercentage]
}

data rule ConstituentWeight_basketPercentage <"FpML specifies basketPercentage as a RestrictedPercentage type, meaning that the value needs to be comprised between 0 and 1.">
	when ConstituentWeight -> basketPercentage exists
	then ConstituentWeight -> basketPercentage >= 0.0 and ConstituentWeight -> basketPercentage <= 1.0

data rule FpML_cd_44_openUnits <"FpML validation rule cd-44 - All referencePoolItem/constituentWeight must have the same name of child element.">
	when ReferencePool -> referencePoolItem -> constituentWeight -> openUnits exists
	then ReferencePool -> referencePoolItem -> constituentWeight -> basketPercentage is absent

data rule FpML_cd_44_basketPercentage <"FpML validation rule cd-44 - All referencePoolItem/constituentWeight must have the same name of child element.">
	when ReferencePool -> referencePoolItem -> constituentWeight -> basketPercentage exists
	then ReferencePool -> referencePoolItem -> constituentWeight -> openUnits is absent

class ConvertibleBond extends IdentifiedProduct <"A class to specify a convertible bond as having a product identifier. As a difference with FpML, the CDM specifies the convertible bond only with this product identifier attribute. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.">
{

}

abstract class IdentifiedProduct <"An abstract class to specify a product which terms are abstracted through reference data.">
{
	productIdentifier ProductIdentifier (1..1);
}

class Loan extends IdentifiedProduct
	[synonym FpML_5_10 value Loan]
{
	borrower LegalEntity (0..*) <"Specifies the borrower. There can be more than one borrower. It is meant to be used in the event that there is no Bloomberg Id or the Secured List isn't applicable.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value borrower]
	lien string (0..1) scheme <"Specifies the seniority level of the lien.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value lien meta lienScheme]
	facilityType string (0..1) scheme <"The type of loan facility (letter of credit, revolving, ...).">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value facilityType meta facilityTypeScheme]
	creditAgreementDate date (0..1) <"The credit agreement date is the closing date (the date where the agreement has been signed) for the loans in the credit agreement. Funding of the facilities occurs on (or sometimes a little after) the Credit Agreement date. This underlyer attribute is used to help identify which of the company's outstanding loans are being referenced by knowing to which credit agreement it belongs. ISDA Standards Terms Supplement term: Date of Original Credit Agreement.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value creditAgreementDate]
	tranche string (0..1) scheme <"The loan tranche that is subject to the derivative transaction. It will typically be referenced as the Bloomberg tranche number. ISDA Standards Terms Supplement term: Bloomberg Tranche Number.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value tranche meta loanTrancheScheme]
}

class Mortgage extends ProductIdentifier
	[synonym FpML_5_10 value Mortgage]
{
	pool AssetPool (0..1) <"The mortgage pool that is underneath the mortgage obligation.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value pool]
	sector MortgageSectorEnum (0..1) scheme <"The sector classification of the mortgage obligation.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value sector meta mortgageSectorScheme]
	tranche string (0..1) <"The mortgage obligation tranche that is subject to the derivative transaction.">;
		[synonym FpML_5_10, DTCC_PostTrade_11_0 value tranche]
}

class ProductIdentifier rosettaKey <"The product identifier, composed of an identifier, a source and a product taxonomy. The source is optional because it can be specified through the scheme that is associated with the identifier. As FpML doesn't specify a scheme as part of the standard, that scheme cannot be mapped to the CDM ProductIdSourceEnum.">
{
	id (0..1);
		[synonym FpML_5_10, DTCC_PostTrade_11_0 meta id]
	identifier string (1..*) scheme <"The identifier.">;
		[synonym FpML_5_10, Rosetta_Workbench, DTCC_PostTrade_11_0 value instrumentId meta instrumentIdScheme]
		[synonym Rosetta_Workbench value security path "asset" meta instrumentIdScheme]
		[synonym Rosetta_Workbench value instrumentId meta instrumentIdScheme]
		[synonym Rosetta_Workbench value convertibleBond meta instrumentIdScheme]
	source ProductIdSourceEnum (0..1) <"The identifier source.">;
	productTaxonomy ProductTaxonomy (0..*) <"The product taxonomy value(s) associated with a product.">;
}

class ProductTaxonomy <"The product taxonomy, which is composed of a taxonomy value and a taxonomy source.">
{
	taxonomyValue string (1..1) <"The taxonomy value.">;
	taxonomySource TaxonomySourceEnum (1..1) <"The taxonomy source.">;
}

class Security one of
{
	bond Bond (0..1);
		[synonym Rosetta_Workbench value bond]
	convertibleBond ConvertibleBond (0..1);
		[synonym Rosetta_Workbench value convertibleBond]
}	