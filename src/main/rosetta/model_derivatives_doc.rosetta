namespace "org.isda.cdm"

class CalculationAgentModel <"This class corresponds to the FpML CalculationAgent.model.">
{
	calculationAgent CalculationAgent (0..1) <"The ISDA calculation agent responsible for performing duties as defined in the applicable product definitions.">;
		[synonym FpML_5_10, CME_Submission, CME_ClearedConfirm_1_17 value calculationAgent path "trade"]
		[synonym Rosetta_Workbench value calculationAgent]
		[synonym FpML_5_10, CME_Submission, CME_ClearedConfirm_1_17 value calculationAgent path "trade.swaption"]
		[synonym FpML_5_10, CME_Submission, CME_ClearedConfirm_1_17 value calculationAgent path "swaption"]
	calculationAgentBusinessCenter BusinessCenterEnum (0..1) <"The city in which the office through which ISDA Calculation Agent is acting for purposes of the transaction is located. The short-form confirm for a trade that is executed under a Sovereign or Asia-Pacific Master Confirmation Agreement (MCA), does not need to specify the Calculation Agent. However, the confirm does need to specify the Calculation Agent city. This is due to the fact that the MCA sets the value for Calculation Agent but does not set the value for Calculation Agent city.">;
		[synonym FpML_5_10, CME_Submission, CME_ClearedConfirm_1_17 value calculationAgentBusinessCenter path "trade"]
		[synonym Rosetta_Workbench value calculationAgentBusinessCenter]
		[synonym DTCC_11_0, DTCC_9_0 value calculationAgentBusinessCenter path "Body.OTC_Matching.Trade.FpML.trade"]
}

class ContractIdentifier extends Identifier <"A class defining a trade identifier issued by the indicated party. The CDM doesn't extends the base class PartyAndAccountReference because of the choice logic with the issuer element.">
	[synonym FpML_5_10 value TradeIdentifier]
{
	partyReference string (0..1) reference <"Reference to a party.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value partyReference meta href]
	accountReference string (0..1) reference <"Reference to an account.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value accountReference meta href]
}

choice rule ContractIdentifier_choice <"Choice rule to represent an FpML choice construct.">
	for ContractIdentifier required choice between
	issuer and partyReference

data rule TradeIdentifier_account <"FpML specifies a choice between issuer and [partyReference, accountReference].  The account element should be populated only alongside the party element.">
	when ContractIdentifier -> partyReference is absent
	then ContractIdentifier -> accountReference is absent

class Identifier extends IdentifierValue
{
	issuer string (1..1) scheme, reference <"The identifier issuer, specified by reference to a party specified as part of the transaction.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0 value partyReference meta scheme, href]
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0 value issuer meta issuerIdScheme, href]
		//[synonym FpML_5_10 value issuer meta issuerIdScheme] // To be deprecated once we deprecate the contractReference
		//[synonym Rosetta_Workbench value issuer meta href]
		// Conditional mapping required? tradeIdScheme=“EventProcessingId” / tradeIdScheme=“TradeRefNbr”
//		[synonym DTCC_11_0, DTCC_9_0 value partyReference maps 2 meta href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "Header.OTC_RM.Manifest.TradeMsg.Submitter.partyTradeIdentifier" maps 2 meta href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "Header.OTC_RM.Manifest.TradeMsg.ContraTradeId.partyTradeIdentifier" maps 2 meta href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "Submitter.partyTradeIdentifier" maps 2 meta href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "ContraTradeId.partyTradeIdentifier" maps 2 meta href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "YourTradeId.partyTradeIdentifier" meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "trade.tradeHeader.partyTradeIdentifier" meta href]
		[synonym DTCC_11_0, DTCC_9_0 value partyReference path "tradeIdentifyingItems.partyTradeIdentifier" meta tradeIdScheme]
		// Conditional mapping required? tradeIdScheme=“EventProcessingId” / tradeIdScheme=“TradeRefNbr”
		[synonym DTCC_11_0, DTCC_9_0 value USIIssuer path "USI" meta issuerIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value USIIssuer path "OriginatingUSI" meta issuerIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value UTIIssuer path "UTI" meta issuerIdScheme]
		//TODO - Add conditional mapping support for duplicating this field when sibling IdentifierValue.identifier exists. see https://trello.com/c/VV1UtOhZ for details.
        [synonym CME_ClearedConfirm_1_17 value partyReference path "trade.tradeHeader.partyTradeIdentifier" maps 2 meta scheme, href]
        [synonym CME_ClearedConfirm_1_17 value issuer  path "trade.tradeHeader.universalSwapIdentifier" meta issuerIdScheme]
	version int (1..1) <"The identifier version, which is specified as an integer and is meant to be incremented each time the transaction terms (whether contract or event) change.">;
		[synonym FpML_5_10 value version path "versionedTradeId"]
		//[synonym Rosetta_Workbench value version]
		//[synonym FpML_5_10 value version] // To be deprecated once we deprecate the contractReference
		[synonym FpML_5_10 value version]
}

class IdentifierValue <"A class to associate an id to an identifier value, to support constructs such as the FpML tradeIdentifier.">
{
	id (0..1);
		[synonym FpML_5_10, CME_Submission meta id]
		[synonym FpML_5_10, CME_Submission meta id path "versionedTradeId.tradeId"]
	identifier string (1..1) scheme;
		[synonym FpML_5_10, CME_Submission value tradeId meta tradeIdScheme]
		[synonym FpML_5_10 value tradeId path "versionedTradeId" meta tradeIdScheme]
		[synonym Rosetta_Workbench value identifier]
		[synonym FpML_5_10 value tradeId meta tradeIdScheme] // To be deprecated once we deprecate the contractReference
		[synonym FpML_5_10 value tradeId path "versionedTradeId" meta tradeIdScheme]
//        [synonym DTCC_11_0 value tradeId set when rosettaPath = Event -> primitive -> inception -> after -> contract and "tradeId.tradeIdScheme" = "TradeRefNbr",
//        									set when rosettaPath = Event -> eventIdentifier and "tradeId.tradeIdScheme" = "EventProcessingId" meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value tradeId path "Header.OTC_RM.Manifest.TradeMsg.Submitter.partyTradeIdentifier" maps 2 meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value tradeId path "Header.OTC_RM.Manifest.TradeMsg.ContraTradeId.partyTradeIdentifier" maps 2 meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value tradeId path "Submitter.partyTradeIdentifier" maps 2 meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value tradeId path "ContraTradeId.partyTradeIdentifier" maps 2 meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value tradeId path "YourTradeId.partyTradeIdentifier" meta tradeIdScheme]
		[synonym DTCC_11_0, DTCC_9_0 value tradeId path "tradeIdentifyingItems.partyTradeIdentifier" meta tradeIdScheme]
		//[synonym DTCC_11_0, DTCC_9_0 value tradeId path "trade.tradeHeader.partyTradeIdentifier" meta tradeIdScheme]
        // Conditional mapping: tradeIdScheme=“EventProcessingId” / tradeIdScheme=“TradeRefNbr”
        [synonym DTCC_11_0, DTCC_9_0 value USITradeId path "USI" meta tradeIdScheme]
        [synonym DTCC_11_0, DTCC_9_0 value USITradeId path "OriginatingUSI" meta tradeIdScheme]
        [synonym DTCC_11_0, DTCC_9_0 value UTITradeId path "UTI" meta tradeIdScheme]
        [synonym DTCC_11_0, DTCC_9_0 value identifier path "payment" meta paymentIdScheme]
        [synonym CME_ClearedConfirm_1_17 value tradeId path "trade.tradeHeader.partyTradeIdentifier" meta tradeIdScheme]
        [synonym CME_ClearedConfirm_1_17 value usi  path "trade.tradeHeader.universalSwapIdentifier" meta usiScheme]
}

class PackageInformation <"A class defining additional information that may be recorded alongside a transaction package.">
	[synonym FpML_5_10 value PackageInformation]
{
	relatedParty RelatedParty (0..*) <"This may be used to identify one or more parties that perform a role as part of the transaction.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value relatedParty]
	category CategoryEnum (0..*);
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value category]
	/*
	 * Why should the below be specifically associated with package transactions?
	 * It seems to also be relevant in the context of single trades
	 */
	intentToAllocate boolean (0..1) <"specifies whether the transaction package is anticipated to be allocated.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value intentToAllocate]
/*
 * Only some of the attributes have been incorporated at this point, as some seem questionable (e.g. executionDateTime, which should be associated to the relevant execution event).
 */
}

data rule VersionedTradeId_version <"FpML specifies the version as a non-negative integer.">
	when Identifier -> version exists
	then Identifier -> version >= 0

class PartyContractInformation <"A class defining party-specific additional information that may be recorded with respect to a contract.">
	[synonym FpML_5_10 value PartyTradeInformation]
{
	partyReference string (1..1) reference <"The reference to the party that owns this party contract information or, in the case of shared trades information, the reference that originated such information.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value partyReference meta href]
	naturalPersonRole NaturalPersonRole (0..*) <"The role(s) that natural person(s) may have in relation to the contract.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value relatedPerson]
	relatedParty RelatedParty (0..1);
		[synonym FpML_5_10, CME_Submission, CME_ClearedConfirm_1_17 value relatedParty]
	accountReference string (0..1) reference <"Reference to an account.">;
		[synonym CME_ClearedConfirm_1_17 value accountReference meta href]
}

class PercentageRule <"A class defining a content model for a calculation rule defined as percentage of the notional amount.">
	[synonym FpML_5_10 value PercentageRule]
{
	paymentPercent number (1..1) <"A percentage of the notional amount.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value paymentPercent]
	notionalAmountReference string (1..1) reference <"A reference to the notional amount.">;
		[synonym FpML_5_10, CME_Submission, DTCC_11_0, DTCC_9_0, CME_ClearedConfirm_1_17 value notionalAmountReference meta href]
}
