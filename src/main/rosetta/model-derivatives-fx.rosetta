namespace "org.isda.cdm"
version "${project.version}"

class FxPayout extends FxCoreDetails {
	
}

class FxCoreDetails <"The elements common to FX spot, forward and swap legs.">
{
	dealtCurrency DealtCurrencyEnum (0..1) <"Indicates which currency was dealt.">;
	fxTenor FxTenor (0..1);
	valueDate date (0..1) <"The date on which both currencies traded will settle.">;
	currencyValueDates CurrencyDates (0..1) <"The date on which the currency1 amount will be settled. To be used in a split value date scenario.">;
	exchangeRate ExchangeRate (1..1) <"The rate of exchange between the two currencies.">;
	nonDeliverableSettlement FxCashSettlement (0..1) <"Used to describe a particular type of FX forward transaction that is settled in a single currency (for example, a non-deliverable forward).">;
	disruption FxDisruption (0..*) <"Describes the disruption events and fallbacks applicable to a currency pair referenced by the transaction.">;
}

choice rule FxCoreDetails_choice
	for FxCoreDetails required choice between valueDate and currencyValueDates
	
class CurrencyDates {
	currency1ValueDate date (1..1);
	currency2ValueDate date (1..1);
}



class FxTenor {
	tenorName FxTenorPeriodEnum (1..1) <"A tenor expressed with a standard business term (i.e. Spot, TomorrowNext, etc.)">;
	tenorPeriod Period (1..1) <"A tenor expressed as a period type and multiplier (e.g. 1D, 1Y, etc.)">;
}

class ExchangeRate <"A type that is used for describing the exchange rate for a particular transaction."> 
{
	quotedCurrencyPair QuotedCurrencyPair (1..1) <"Defines the two currencies for an FX trade and the quotation relationship between the two currencies.">;
	rate PositiveDecimal (1..1) <"The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.">;
	spotRate PositiveDecimal (0..1) <"An element used for FX forwards and certain types of FX OTC options. For deals consumated in the FX Forwards Market, this represents the current market rate for a particular currency pair. For barrier and digital/binary options, it can be useful to include the spot rate at the time the option was executed to make it easier to know whether the option needs to move 'up' or 'down' to be triggered.">;
	forwardPoints number (0..1) <"An optional element used for deals consumated in the FX Forwards market. Forward points represent the interest rate differential between the two currencies traded and are quoted as a preminum or a discount. Forward points are added to, or subtracted from, the spot rate to create the rate of the forward trade.">;
	pointValue PointValue (0..1) <"An optional element that documents the size of point (pip) in which a rate was quoted (or in this case, forwardPoints are calculated). Point (pip) size varies by currency pair: major currencies are all traded in points of 0.0001, with the exception of JPY which has a point size of 0.01.">;
	crossRate CrossRate (0..*) <"An optional element that allow for definition of the currency exchange rates used to cross between the traded currencies for non-base currency FX contracts.">;
}

data rule ExchangeRate_rule_1 
	when ExchangeRate -> pointValue exists 
	then ExchangeRate -> forwardPoints exists 

data rule ExchangeRate_rule_2
	when ExchangeRate -> forwardPoints exists 
	then ExchangeRate -> spotRate exists

class CrossRate {
	
}
	
class FxCashSettlement {
	
}

class PointValue {
	
}

class FxDisruption {
	
}

class PositiveDecimal {
	
}

enum DealtCurrencyEnum { 
	ExchangedCurrency1, ExchangedCurrency2
} 

enum FxTenorPeriodEnum <"The specification of a time period containing values such as Today, Tomorrow etc."> 
{
	Broken, Today, Tomorrow, TomorrowNext, Spot, SpotNext
}
