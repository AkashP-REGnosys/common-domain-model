name: Maven Build
description: Run a Maven Build

inputs:
  build-command:
    description: The Maven command to build the project. The default is `package`.
    required: false
    # type: string  - `type` field is not supported (yet). See comment below.
    default: install
  release-name:
    description: The Maven artifact name and version.
    required: true
  build-flags: 
    description: The Maven build flags
    required: false
    default: '-Dmaven.repo.local=$GITHUB_WORKSPACE/.m2' # why the local artifactory is required 
  deploy-flags:
    description: The Maven deploy flags
    required: false
    default: '-s $GITHUB_WORKSPACE/settings.xml -Dmaven.repo.local=$GITHUB_WORKSPACE/.m2' # not required since actions/setup-java allows the definition of the settings file path and build-flags already define the ref to the local artifactory
  build-profiles:
    description: The maven build profiles
    required: false
    default: 'daml,scala,typescript,golang,csharp8,csharp9,kotlin,python,full,gpg,excel' # TBD whether this is useful for the parallel build tasks

runs:
  using: "composite"
  steps:
    - name: Set up JDK 11 for x64
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64
        cache: maven
        server-id: ossrh
        server-username: CI_DEPLOY_USERNAME # env context
        server-password: CI_DEPLOY_PASSWORD # env context
        settings-path: '$GITHUB_WORKSPACE/settings.xml'
        gpg-private-key: GPG_KEYNAME
        gpg-passphrase: GPG_PASSPHRASE
        
    - name: Build with Maven
      shell: bash
      run: |
        mvn ${{inputs.build-flags}} versions:set -DnewVersion=${{inputs.release-name}} versions:update-child-modules -DallowSnapshots=true
        mvn ${{inputs.deploy-flags}} clean ${{inputs.build-command}} -P "${{inputs.build-profiles}}"

